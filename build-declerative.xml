pipeline {
    agent any
    tools {
        maven 'maven3.9.0'
    }
    options {
     timestamps()
     buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')

    }
    triggers {
      pollSCM('* * * * *')
    }

    stages {
        stage('Checkout') {
            steps {
                 notifyBuild('STARTED')
                git branch: 'development',
                credentialsId: 'github',
                url: 'https://github.com/manojmogalla/maven-web-application.git'
            }
        }
        stage('Build') {
            steps {
                sh "mvn clean package"
            }
        }
        stage('SonarReport') {
            steps {
                sh "mvn clean sonar:sonar"
            }
        }
        stage('Nexus') {
            steps {
                sh "mvn clean deploy"
            }
        }
    }
    post {
        unstable {
            notifyBuild(currentBuild.result)
        }
        notBuilt {
            notifyBuild(currentBuild.result)
        }
        aborted {
            notifyBuild(currentBuild.result)
        }
        success {
            notifyBuild(currentBuild.result)
        }
        failure {
            notifyBuild(currentBuild.result)
        }
    }
}



def notifyBuild(String buildStatus = 'STARTED') {
    // build status of null means successful
    buildStatus = buildStatus ?: 'SUCCESS'

    def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
    def summary = "${subject} (${env.BUILD_URL})"
    // Override default values based on build status
    if (buildStatus == 'STARTED') {
        color = 'Orange'
        colorCode = '#FFFF00'
    } else if (buildStatus == 'SUCCESS') {
        color = 'GREEN'
        colorCode = '#00FF00'
    } else {
        color = 'RED'
        colorCode = '#FF0000'
    }
    // Send notifications
    slackSend (color: colorCode, message: summary)
}Ë‡
